apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'

static def getApiKey() {
    Properties properties = new Properties()
    properties.load(new FileInputStream(new File('secrets.properties')))
    return properties['API_KEY']
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.project.segunfrancis.currencyconverter"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
        }
    }
    buildFeatures {
        viewBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"]
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'META-INF/LGPL2.1'
        pickFirst 'META-INF/AL2.0'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':data')
    implementation project(':domain')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ext_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ext_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //hilt for DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$dagger_version"
    kapt "androidx.hilt:hilt-compiler:$dagger_version"

    // Multidex
    implementation "androidx.multidex:multidex:$multidex_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // PowerMenu
    implementation "com.github.skydoves:powermenu:$powermenu_version"

    // Emoji for country flags
    implementation "androidx.emoji:emoji:$emoji_version"
    implementation "androidx.emoji:emoji-appcompat:$emoji_version"

    // IG Refresh layout
    implementation "com.github.Jamshid-M:IGRefreshLayout:$refresh_layout_version"

    // Lottie Animation
    implementation "com.airbnb.android:lottie:$lottie_version"

    // Test
    testImplementation 'junit:junit:4.13'
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9"

    androidTestImplementation ("org.robolectric:robolectric:4.4")
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:rules:1.3.1-alpha02"
    androidTestImplementation "org.mockito:mockito-inline:2.23.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.6.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9"
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:1.0.0"
}